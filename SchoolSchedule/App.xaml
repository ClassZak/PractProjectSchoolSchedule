<Application x:Class="SchoolSchedule.App"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns:local="clr-namespace:SchoolSchedule"
			 xmlns:View="clr-namespace:SchoolSchedule.View"
			 StartupUri="View/MainWindow.xaml">
	<Application.Resources>
		<!--Стиль для окон и страниц (не работает)-->
		<Style TargetType="{x:Type Window}">
			<Setter Property="TextElement.FontFamily" Value="Arial"/>
			<Setter Property="TextElement.FontSize" Value="14"/>
		</Style>
		<Style TargetType="{x:Type Page}">
			<Setter Property="TextElement.FontFamily" Value="Arial"/>
			<Setter Property="TextElement.FontSize" Value="14"/>
		</Style>
		<Style TargetType="{x:Type Control}">
			<Setter Property="FontFamily" Value="Arial"/>
			<Setter Property="FontSize"   Value="14"/>
		</Style>

		<!--Style and template for the resize control on the DataGridColumnHeader.-->
		<Style x:Key="ColumnHeaderGripperStyle" TargetType="{x:Type Thumb}">
			<Setter Property="Width" Value="8" />
			<Setter Property="Background" Value="Transparent" />
			<Setter Property="Cursor" Value="SizeWE" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Background="{TemplateBinding Background}"
					Padding="{TemplateBinding Padding}" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--Style and template for the DataGridColumnHeader.-->
		<Style TargetType="DataGrid">
			<Setter Property="RowBackground">
				<Setter.Value>
					<SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
				</Setter.Value>
			</Setter>
			<Setter Property="AlternatingRowBackground">
				<Setter.Value>
					<SolidColorBrush Color="{DynamicResource ControlMediumColor}"/>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
						<Grid>
							<Border x:Name="columnHeaderBorder" BorderThickness="1" Padding="3,0,3,0">
								<Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="{DynamicResource BorderLightColor}" Offset="0" />
										<GradientStop Color="{DynamicResource BorderDarkColor}" Offset="1" />
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
										<GradientStop Color="{DynamicResource ControlLightColor}" Offset="0" />
										<GradientStop Color="{DynamicResource ControlMediumColor}" Offset="1" />
									</LinearGradientBrush>
								</Border.Background>
								<ContentPresenter 
									HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
									VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								/>
							</Border>

							<Thumb 
								x:Name="PART_LeftHeaderGripper"
								HorizontalAlignment="Left"
								Style="{StaticResource ColumnHeaderGripperStyle}"
							/>
							<Thumb x:Name="PART_RightHeaderGripper"
								HorizontalAlignment="Right"
								Style="{StaticResource ColumnHeaderGripperStyle}"
							/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1"
				   StartPoint="0.5,0">
						<GradientStop Color="{DynamicResource ControlLightColor}"
			  Offset="0" />
						<GradientStop Color="{DynamicResource ControlMediumColor}"
			  Offset="1" />
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
		</Style>


		<!--Control colors.-->
		<Color x:Key="WindowColor">#FFE8EDF9</Color>
		<Color x:Key="ContentAreaColorLight">Black</Color>
		<Color x:Key="ContentAreaColorDark">Black</Color>

		<Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
		<Color x:Key="DisabledControlDarkColor">GhostWhite</Color>
		<Color x:Key="DisabledForegroundColor">#FF888888</Color>

		<Color x:Key="SelectedBackgroundColor">LightBlue</Color>
		<Color x:Key="SelectedUnfocusedColor">LightSkyBlue</Color>

		<Color x:Key="ControlLightColor">White</Color>
		<Color x:Key="ControlMediumColor">AntiqueWhite</Color>
		<Color x:Key="ControlDarkColor">Gray</Color>

		<Color x:Key="ControlMouseOverColor">LightBlue</Color>
		<Color x:Key="ControlPressedColor">FloralWhite</Color>


		<Color x:Key="GlyphColor">#FF444444</Color>
		<Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

		<!--Border colors-->
		<Color x:Key="BorderLightColor">#FFCCCCCC</Color>
		<Color x:Key="BorderMediumColor">#FF888888</Color>
		<Color x:Key="BorderDarkColor">#FF444444</Color>

		<Color x:Key="PressedBorderLightColor">#FF888888</Color>
		<Color x:Key="PressedBorderDarkColor">#FF444444</Color>

		<Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
		<Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

		<Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

		<!--Control-specific resources.-->
		<Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
		<Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
		<Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

		<Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

		<LinearGradientBrush x:Key="MenuPopupBrush"
			 EndPoint="0.5,1"
			 StartPoint="0.5,0">
			<GradientStop Color="{DynamicResource ControlLightColor}"
		Offset="0" />
			<GradientStop Color="{DynamicResource ControlMediumColor}"
		Offset="0.5" />
			<GradientStop Color="{DynamicResource ControlLightColor}"
		Offset="1" />
		</LinearGradientBrush>

		<LinearGradientBrush 
			x:Key="ProgressBarIndicatorAnimatedFill"
			StartPoint="0,0"
			EndPoint="1,0"
		>
			<LinearGradientBrush.GradientStops>
				<GradientStopCollection>
					<GradientStop Color="#000000FF" Offset="0" />
					<GradientStop Color="#600000FF" Offset="0.4" />
					<GradientStop Color="#600000FF" Offset="0.6" />
					<GradientStop Color="#000000FF" Offset="1" />
				</GradientStopCollection>
			</LinearGradientBrush.GradientStops>
		</LinearGradientBrush>



		<!--Градиенты-->
		<SolidColorBrush x:Key="ControlDarkBrush" Color="{StaticResource ControlDarkColor}" />
		<!--Дефолтный градиент -->
		<LinearGradientBrush x:Key="DefaultGradient" StartPoint="0,0" EndPoint="0,1">
			<GradientStop Color="GhostWhite" Offset="0"/>
			<GradientStop Color="AntiqueWhite" Offset="1"/>
		</LinearGradientBrush>
		<!-- Градиент при наведении -->
		<LinearGradientBrush x:Key="HoverGradient" StartPoint="0,0" EndPoint="0,1">
			<GradientStop Color="GhostWhite" Offset="0"/>
			<GradientStop Color="LightBlue" Offset="1"/>
		</LinearGradientBrush>
		<!-- Градиент при выборе-->
		<LinearGradientBrush x:Key="SelectedGradient" StartPoint="0,0" EndPoint="0,1">
			<GradientStop Color="GhostWhite" Offset="0"/>
			<GradientStop Color="LightSkyBlue" Offset="1"/>
		</LinearGradientBrush>
		<!-- Градиент при выборе и наведении-->
		<LinearGradientBrush x:Key="SelectedAndHoverGradient" StartPoint="0,0" EndPoint="0,1">
			<GradientStop Color="GhostWhite" Offset="0"/>
			<GradientStop Color="DeepSkyBlue" Offset="1"/>
		</LinearGradientBrush>
		<!-- Градиент для нажатой кнопки -->
		<LinearGradientBrush x:Key="PressedGradient" StartPoint="0,0" EndPoint="0,1">
			<GradientStop Color="#FF9DC8D6" Offset="0.0"/>
			<GradientStop Color="#FFEEEEEE" Offset="1.0"/>
		</LinearGradientBrush>




			
		<!--~TabControl-->
		<Style  TargetType="{x:Type TabControl}">
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid KeyboardNavigation.TabNavigation="Local">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames 
												Storyboard.TargetName="Border"
												Storyboard.TargetProperty="(Border.BorderBrush).
												(SolidColorBrush.Color)"
											>
												<EasingColorKeyFrame KeyTime="0" Value="#FFAAAAAA" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<TabPanel
								x:Name="HeaderPanel"
								Grid.Row="0"
								Panel.ZIndex="1"
								Margin="0,0,4,-1"
								IsItemsHost="True"
								KeyboardNavigation.TabIndex="1"
								Background="Transparent" />
							<Border 
								x:Name="Border"
								Grid.Row="1"
								BorderThickness="1"
								KeyboardNavigation.TabNavigation="Local"
								KeyboardNavigation.DirectionalNavigation="Contained"
								KeyboardNavigation.TabIndex="2"
							>
								<Border.BorderBrush>
									<SolidColorBrush Color="{StaticResource BorderDarkColor}"/>
								</Border.BorderBrush>
								<ContentPresenter 
									x:Name="PART_SelectedContentHost"
									Margin="4"
									ContentSource="SelectedContent" />
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="{x:Type TabItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid x:Name="Root">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected" />
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
										Storyboard.TargetProperty="(Panel.Background).
			(GradientBrush.GradientStops)[1].(GradientStop.Color)">
												<EasingColorKeyFrame KeyTime="0"
								 Value="{StaticResource ControlPressedColor}" />
											</ColorAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
											Storyboard.TargetName="Border">
												<EasingThicknessKeyFrame KeyTime="0"
									 Value="1,1,1,0" />
											</ThicknessAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
										Storyboard.TargetProperty="(Panel.Background).
			(GradientBrush.GradientStops)[1].(GradientStop.Color)">
												<EasingColorKeyFrame KeyTime="0"
								 Value="{StaticResource DisabledControlDarkColor}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
										Storyboard.TargetProperty="(Border.BorderBrush).
			(SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0"
								 Value="{StaticResource DisabledBorderLightColor}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border"
		  Margin="0,0,-4,0"
		  BorderThickness="1,1,1,1"
		  CornerRadius="2,12,0,0">
								<Border.BorderBrush>
									<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
								</Border.BorderBrush>
								<Border.Background>

									<LinearGradientBrush StartPoint="0,0"
						   EndPoint="0,1">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop Color="{DynamicResource ControlLightColor}"
						  Offset="0.0" />
												<GradientStop Color="{DynamicResource ControlMediumColor}"
						  Offset="1.0" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>

								</Border.Background>
								<ContentPresenter x:Name="ContentSite"
					  VerticalAlignment="Center"
					  HorizontalAlignment="Center"
					  ContentSource="Header"
					  Margin="12,2,12,2"
					  RecognizesAccessKey="True" />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected"
		   Value="True">
								<Setter Property="Panel.ZIndex"
			Value="100" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--Скроллбар-->
		<Style TargetType="{x:Type ScrollBar}">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ScrollBar}">
						<Grid>
							<!-- Градиент фона трека -->
							<Rectangle RadiusX="3" RadiusY="3"
					 Fill="{TemplateBinding Background}"/>

							<!-- Именованный Track без IsDirectionReversed -->
							<Track x:Name="PART_Track"
								Orientation="{TemplateBinding Orientation}"
								Minimum="{TemplateBinding Minimum}"
								Maximum="{TemplateBinding Maximum}"
								Value="{TemplateBinding Value}"
								ViewportSize="{TemplateBinding ViewportSize}"
							>
								<Track.Thumb>
									<Thumb>
										<Thumb.Template>
											<ControlTemplate TargetType="Thumb">
												<Rectangle 
													Fill="#FF808080"
													RadiusX="3" RadiusY="3"
													Margin="1"
												/>
											</ControlTemplate>
										</Thumb.Template>
									</Thumb>
								</Track.Thumb>
							</Track>
						</Grid>

						<!-- Триггер для вертикальной ориентации -->
						<ControlTemplate.Triggers>
							<Trigger Property="Orientation" Value="Vertical">
								<Setter TargetName="PART_Track"
									Property="IsDirectionReversed"
									Value="True"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--Меню-->
		<Style TargetType="Menu">
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0,1">
						<GradientStop Color="White"/>
						<GradientStop Color="AntiqueWhite" Offset="1"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderThickness" Value="0,0,0,1"/>
			<Setter Property="BorderBrush" Value="#FF7D7D7D"/>
		</Style>
		<!--Style TargetType="MenuItem">
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="BorderBrush" Value="Transparent"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="MenuItem">
						<Border x:Name="RootBorder"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">

							<Grid>
								<ContentPresenter ContentSource="Header"
                                          RecognizesAccessKey="True"
                                          VerticalAlignment="Center"/>

								<Path x:Name="SubmenuArrow"
                              Data="M 0 0 L 4 4 L 8 0 Z"
                              Fill="Black"
                              HorizontalAlignment="Right"
                              VerticalAlignment="Center"
                              Margin="4,0"
                              Visibility="Collapsed"/>
							</Grid>
						</Border>

						<ControlTemplate.Triggers>
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="RootBorder" Property="Background" Value="#FFFF0000"/>
								<Setter TargetName="RootBorder" Property="BorderBrush" Value="#FF00FF00"/>
								</Trigger>
							<Trigger Property="IsSubmenuOpen" Value="True">
								<Setter TargetName="SubmenuArrow" Property="Visibility" Value="Visible"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style-->
		<!--Кнопки-->
		<Style TargetType="Button">
			<Setter Property="Background" Value="{StaticResource DefaultGradient}"/>
			<Setter Property="BorderBrush" Value="{StaticResource ControlDarkBrush}"/>
			<Setter Property="BorderThickness" Value="1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="Button">
						<Grid>
							<!-- Основная граница и фон -->
							<Border 
								x:Name="mainBorder"
								Background="{TemplateBinding Background}"
								BorderBrush="{TemplateBinding BorderBrush}"
								BorderThickness="{TemplateBinding BorderThickness}"
								Padding="{TemplateBinding Padding}">
								<ContentPresenter 
									x:Name="contentPresenter"
									HorizontalAlignment="Center"
									VerticalAlignment="Center"
								/>
							</Border>
							<!-- Белые границы (справа и снизу) -->
							<Border
								x:Name="whiteBorder"
								BorderBrush="White"
								BorderThickness="0,0,1,1"
								Opacity="0"
							/>
						</Grid>
						<ControlTemplate.Triggers>
							<!-- Hover -->
							<Trigger Property="IsMouseOver" Value="True">
								<Setter
									TargetName="mainBorder" 
									Property="Background" 
									Value="{StaticResource HoverGradient}"
								/>
							</Trigger>
							<!-- Pressed -->
							<Trigger Property="IsPressed" Value="True">
								<Setter
									TargetName="mainBorder" 
									Property="Background" 
									Value="{StaticResource PressedGradient}"
								/>
								<Setter 
									TargetName="whiteBorder" 
									Property="Opacity" 
									Value="1"
								/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--ComboBox-->
		<ControlTemplate x:Key="ComboBoxToggleButton"
				 TargetType="{x:Type ToggleButton}">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition />
					<ColumnDefinition Width="20" />
				</Grid.ColumnDefinitions>
				<VisualStateManager.VisualStateGroups>
					<VisualStateGroup x:Name="CommonStates">
						<VisualState x:Name="Normal" />
						<VisualState x:Name="MouseOver">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
				(GradientBrush.GradientStops)[1].(GradientStop.Color)"
										  Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0"
								   Value="{StaticResource ControlMouseOverColor}" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Pressed" />
						<VisualState x:Name="Disabled">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
				(GradientBrush.GradientStops)[1].(GradientStop.Color)"
										  Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0"
								   Value="{StaticResource DisabledControlDarkColor}" />
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
				(SolidColorBrush.Color)"
										  Storyboard.TargetName="Arrow">
									<EasingColorKeyFrame KeyTime="0"
								   Value="{StaticResource DisabledForegroundColor}" />
								</ColorAnimationUsingKeyFrames>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
				(GradientBrush.GradientStops)[1].(GradientStop.Color)"
										  Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0"
								   Value="{StaticResource DisabledBorderDarkColor}" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
					</VisualStateGroup>
					<VisualStateGroup x:Name="CheckStates">
						<VisualState x:Name="Checked">
							<Storyboard>
								<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
				(GradientBrush.GradientStops)[1].(GradientStop.Color)"
										  Storyboard.TargetName="Border">
									<EasingColorKeyFrame KeyTime="0"
								   Value="{StaticResource ControlPressedColor}" />
								</ColorAnimationUsingKeyFrames>
							</Storyboard>
						</VisualState>
						<VisualState x:Name="Unchecked" />
						<VisualState x:Name="Indeterminate" />
					</VisualStateGroup>
				</VisualStateManager.VisualStateGroups>
				<Border x:Name="Border"
			Grid.ColumnSpan="2"
			CornerRadius="2"
			BorderThickness="1">
					<Border.BorderBrush>
						<LinearGradientBrush EndPoint="0,1"
							 StartPoint="0,0">
							<GradientStop Color="{DynamicResource BorderLightColor}"
						Offset="0" />
							<GradientStop Color="{DynamicResource BorderDarkColor}"
						Offset="1" />
						</LinearGradientBrush>
					</Border.BorderBrush>
					<Border.Background>

						<LinearGradientBrush StartPoint="0,0"
							 EndPoint="0,1">
							<LinearGradientBrush.GradientStops>
								<GradientStopCollection>
									<GradientStop Color="{DynamicResource ControlLightColor}" />
									<GradientStop Color="{DynamicResource ControlMediumColor}"
							Offset="1.0" />
								</GradientStopCollection>
							</LinearGradientBrush.GradientStops>
						</LinearGradientBrush>

					</Border.Background>
				</Border>
				<Border Grid.Column="0"
			CornerRadius="2,0,0,2"
			Margin="1" >
					<Border.Background>
						<SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
					</Border.Background>
				</Border>
				<Path x:Name="Arrow"
		  Grid.Column="1"
		  HorizontalAlignment="Center"
		  VerticalAlignment="Center"
		  Data="M 0 0 L 4 4 L 8 0 Z" >
					<Path.Fill>
						<SolidColorBrush Color="{DynamicResource GlyphColor}"/>
					</Path.Fill>
				</Path>
			</Grid>
		</ControlTemplate>
		<ControlTemplate x:Key="ComboBoxTextBox"
				 TargetType="{x:Type TextBox}">
			<Border x:Name="PART_ContentHost"
		  Focusable="False"
		  Background="{TemplateBinding Background}" />
		</ControlTemplate>
		<Style x:Key="{x:Type ComboBox}" TargetType="{x:Type ComboBox}">
			<Setter Property="SnapsToDevicePixels"  Value="true" />
			<Setter Property="OverridesDefaultStyle" Value="true" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.CanContentScroll" Value="true" />
			<Setter Property="MinWidth" Value="20" />
			<Setter Property="MinHeight" Value="20" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type ComboBox}">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames 
												Storyboard.TargetName="PART_EditableTextBox" 
												Storyboard.TargetProperty="(TextElement.Foreground).(SolidColorBrush.Color)"
											>
												<EasingColorKeyFrame
													KeyTime="0"
													Value="{StaticResource DisabledForegroundColor}"
												/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="EditStates">
									<VisualState x:Name="Editable">
										<Storyboard>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetProperty="(UIElement.Visibility)"
												Storyboard.TargetName="PART_EditableTextBox"
											>
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
											</ObjectAnimationUsingKeyFrames>
											<ObjectAnimationUsingKeyFrames
												Storyboard.TargetProperty="(UIElement.Visibility)" 
												Storyboard.TargetName="ContentSite"
											>
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Hidden}" />
											</ObjectAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Uneditable" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ToggleButton 
								x:Name="ToggleButton"
								Template="{StaticResource ComboBoxToggleButton}"
								Grid.Column="2"
								Focusable="false"
								ClickMode="Press"
								IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, 
								RelativeSource={RelativeSource TemplatedParent}}"
							/>
							<ContentPresenter
								x:Name="ContentSite"
								IsHitTestVisible="False"
								Content="{TemplateBinding SelectionBoxItem}"
								ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
								ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
								Margin="3,3,23,3"
								VerticalAlignment="Stretch"
								HorizontalAlignment="Left"
							>
							</ContentPresenter>
							<TextBox 
								x:Name="PART_EditableTextBox"
								Style="{x:Null}"
								Template="{StaticResource ComboBoxTextBox}"
								HorizontalAlignment="Left"
								VerticalAlignment="Bottom"
								Margin="3,3,23,3"
								Focusable="True"
								Background="Transparent"
								Visibility="Hidden"
								IsReadOnly="{TemplateBinding IsReadOnly}"
							/>
							<Popup x:Name="Popup"
								Placement="Bottom"
								IsOpen="{TemplateBinding IsDropDownOpen}"
								AllowsTransparency="True"
								Focusable="False"
								PopupAnimation="Slide"
							>
								<Grid 
									x:Name="DropDown"
									SnapsToDevicePixels="True"
									MinWidth="{TemplateBinding ActualWidth}"
									MaxHeight="{TemplateBinding MaxDropDownHeight}"
								>
									<Border x:Name="DropDownBorder" BorderThickness="1">
										<Border.BorderBrush>
											<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
										</Border.BorderBrush>
										<Border.Background>
											<SolidColorBrush Color="{DynamicResource ControlLightColor}" />
										</Border.Background>
									</Border>
									<ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
										<StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
									</ScrollViewer>
								</Grid>
							</Popup>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="HasItems" Value="false">
								<Setter TargetName="DropDownBorder" Property="MinHeight" Value="95" />
							</Trigger>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
							</Trigger>
							<Trigger SourceName="Popup" Property="AllowsTransparency" Value="true">
								<Setter TargetName="DropDownBorder" Property="CornerRadius" Value="4" />
								<Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!-- Стиль для всех элементов ComboBox -->
		<Style TargetType="ComboBoxItem">
			<!-- Базовые установки -->
			<Setter Property="Background" Value="Transparent"/>
			<Setter Property="HorizontalContentAlignment" Value="Stretch"/>
			<Setter Property="VerticalContentAlignment" Value="Center"/>
			<Setter Property="Padding" Value="4,2"/>
			<Setter Property="Margin" Value="0,1,0,1"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ComboBoxItem">
						<Border x:Name="Bd"
							Background="{TemplateBinding Background}"
							CornerRadius="2"
							SnapsToDevicePixels="True">
							<ContentPresenter
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								Margin="{TemplateBinding Padding}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							/>
						</Border>
						<ControlTemplate.Triggers>
							<!-- 1) Не выбранный + hover -->
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Bd" Property="Background" Value="{StaticResource HoverGradient}"/>
							</Trigger>

							<!-- 2) Выбранный (но без hover) -->
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedGradient}"/>
							</Trigger>

							<!-- 3) Выбранный + hover: темнее, чем #FFBEE6FD -->
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedAndHoverGradient}"/>
							</MultiTrigger>

							<!-- Необязательно: сглаживание границ при фокусе -->
							<Trigger Property="IsEnabled" Value="False">
								<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--TextBox-->
		<Style TargetType="{x:Type TextBox}">
			<Setter Property="View:TextBoxBehavior.MoveCursorToEndOnFocus" Value="True"/>
			<Setter Property="SnapsToDevicePixels" Value="True" />
			<Setter Property="OverridesDefaultStyle" Value="True" />
			<Setter Property="KeyboardNavigation.TabNavigation" Value="None" />
			<Setter Property="FocusVisualStyle" Value="{x:Null}" />
			<Setter Property="MinWidth" Value="120" />
			<Setter Property="MinHeight" Value="20" />
			<Setter Property="AllowDrop" Value="true" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TextBoxBase}">
						<Border 
							Name="Border"
							CornerRadius="2"
							Padding="2"
							BorderThickness="1"
						>
							<Border.Background>
								<SolidColorBrush Color="{DynamicResource ControlLightColor}" />
							</Border.Background>
							<Border.BorderBrush>
								<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
							</Border.BorderBrush>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background). (SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlLightColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="ReadOnly">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border" Storyboard.TargetProperty="(Panel.Background). (SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0" Value="{StaticResource DisabledControlDarkColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="MouseOver" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<ScrollViewer Margin="0" x:Name="PART_ContentHost" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<!--ListView-->
		<Style
			x:Key="{x:Static GridView.GridViewScrollViewerStyleKey}"
			TargetType="ScrollViewer"
		>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ScrollViewer">
						<Grid Background="{TemplateBinding Background}">
							<Grid.ColumnDefinitions>
								<ColumnDefinition Width="*" />
								<ColumnDefinition Width="Auto" />
							</Grid.ColumnDefinitions>
							<Grid.RowDefinitions>
								<RowDefinition Height="*" />
								<RowDefinition Height="Auto" />
							</Grid.RowDefinitions>

							<DockPanel Margin="{TemplateBinding Padding}">
								<ScrollViewer
									DockPanel.Dock="Top"
									HorizontalScrollBarVisibility="Hidden"
									VerticalScrollBarVisibility="Hidden"
									Focusable="false"
								>
									<GridViewHeaderRowPresenter 
										Margin="2,0,2,0"
										Columns="{Binding Path=TemplatedParent.View.Columns, RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderContainerStyle="{Binding Path=TemplatedParent.View.ColumnHeaderContainerStyle, RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderTemplate="{Binding Path=TemplatedParent.View.ColumnHeaderTemplate, RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderTemplateSelector="{Binding  Path=TemplatedParent.View.ColumnHeaderTemplateSelector, RelativeSource={RelativeSource TemplatedParent}}"
										AllowsColumnReorder="{Binding Path=TemplatedParent.View.AllowsColumnReorder, RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderContextMenu="{Binding Path=TemplatedParent.View.ColumnHeaderContextMenu, RelativeSource={RelativeSource TemplatedParent}}"
										ColumnHeaderToolTip="{Binding Path=TemplatedParent.View.ColumnHeaderToolTip, RelativeSource={RelativeSource TemplatedParent}}"
										SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
								</ScrollViewer>

								<ScrollContentPresenter Name="PART_ScrollContentPresenter"
									KeyboardNavigation.DirectionalNavigation="Local"
									CanContentScroll="True"
									CanHorizontallyScroll="False"
									CanVerticallyScroll="False" />
							</DockPanel>

							<ScrollBar Name="PART_HorizontalScrollBar"
								Orientation="Horizontal"
								Grid.Row="1"
								Maximum="{TemplateBinding ScrollableWidth}"
								ViewportSize="{TemplateBinding ViewportWidth}"
								Value="{TemplateBinding HorizontalOffset}"
								Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
							/>

							<ScrollBar Name="PART_VerticalScrollBar"
								Grid.Column="1"
								Maximum="{TemplateBinding ScrollableHeight}"
								ViewportSize="{TemplateBinding ViewportHeight}"
								Value="{TemplateBinding VerticalOffset}"
								Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" 
							/>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="GridViewColumnHeaderGripper"
	   TargetType="Thumb">
			<Setter Property="Width"
		  Value="18" />
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush StartPoint="0,0"
						   EndPoint="0,1">
						<LinearGradientBrush.GradientStops>
							<GradientStopCollection>
								<GradientStop Color="{DynamicResource BorderLightColor}"
						  Offset="0.0" />
								<GradientStop Color="{DynamicResource BorderDarkColor}"
						  Offset="1.0" />
							</GradientStopCollection>
						</LinearGradientBrush.GradientStops>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Padding="{TemplateBinding Padding}"
				Background="Transparent">
							<Rectangle HorizontalAlignment="Center"
					 Width="1"
					 Fill="{TemplateBinding Background}" />
						</Border>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="BorderBrush">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1"
						   StartPoint="0.5,0">
						<GradientStop Color="Black"
					  Offset="0" />
						<GradientStop Color="White"
					  Offset="1" />
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
		</Style>
		<Style x:Key="{x:Type GridViewColumnHeader}"
	   TargetType="GridViewColumnHeader">
			<Setter Property="HorizontalContentAlignment"
		  Value="Center" />
			<Setter Property="VerticalContentAlignment"
		  Value="Center" />
			<Setter Property="Foreground"
		  Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="GridViewColumnHeader">
						<Grid>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
					(GradientBrush.GradientStops)[1].(GradientStop.Color)"
												Storyboard.TargetName="HeaderBorder">
												<EasingColorKeyFrame KeyTime="0"
										 Value="{StaticResource ControlMouseOverColor}" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
									<VisualState x:Name="Pressed" />
									<VisualState x:Name="Disabled" />
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="HeaderBorder"
				  BorderThickness="0,1,0,1"
				  Padding="2,0,2,0">
								<Border.BorderBrush>
									<LinearGradientBrush StartPoint="0,0"
								   EndPoint="0,1">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop Color="{DynamicResource BorderLightColor}"
								  Offset="0.0" />
												<GradientStop Color="{DynamicResource BorderDarkColor}"
								  Offset="1.0" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>

								</Border.BorderBrush>
								<Border.Background>

									<LinearGradientBrush StartPoint="0,0"
								   EndPoint="0,1">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop Color="{DynamicResource ControlLightColor}"
								  Offset="0.0" />
												<GradientStop Color="{DynamicResource ControlMediumColor}"
								  Offset="1.0" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>

								</Border.Background>
								<ContentPresenter x:Name="HeaderContent"
							  Margin="0,0,0,1"
							  RecognizesAccessKey="True"
							  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
							</Border>
							<Thumb x:Name="PART_HeaderGripper"
				 HorizontalAlignment="Right"
				 Margin="0,0,-9,0"
				 Style="{StaticResource GridViewColumnHeaderGripper}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Style.Triggers>
				<Trigger Property="Role"
			 Value="Floating">
					<Setter Property="Opacity"
			  Value="0.7" />
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="GridViewColumnHeader">
								<Canvas Name="PART_FloatingHeaderCanvas">
									<Rectangle Fill="#60000000"
						 Width="{TemplateBinding ActualWidth}"
						 Height="{TemplateBinding ActualHeight}" />
								</Canvas>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
				<Trigger Property="Role"
			 Value="Padding">
					<Setter Property="Template">
						<Setter.Value>
							<ControlTemplate TargetType="GridViewColumnHeader">
								<Border Name="HeaderBorder"
					BorderThickness="0,1,0,1">
									<Border.Background>
										<SolidColorBrush Color="{DynamicResource ControlLightColor}" />
									</Border.Background>
									<Border.BorderBrush>
										<LinearGradientBrush StartPoint="0,0"
									 EndPoint="0,1">
											<LinearGradientBrush.GradientStops>
												<GradientStopCollection>
													<GradientStop Color="{DynamicResource BorderLightColor}"
									Offset="0.0" />
													<GradientStop Color="{DynamicResource BorderDarkColor}"
									Offset="1.0" />
												</GradientStopCollection>
											</LinearGradientBrush.GradientStops>
										</LinearGradientBrush>
									</Border.BorderBrush>
								</Border>
							</ControlTemplate>
						</Setter.Value>
					</Setter>
				</Trigger>
			</Style.Triggers>
		</Style>
		<Style x:Key="{x:Type ListView}" TargetType="ListView">
			<Setter Property="SnapsToDevicePixels" Value="true" />
			<Setter Property="OverridesDefaultStyle"  Value="true" />
			<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
			<Setter Property="ScrollViewer.VerticalScrollBarVisibility"  Value="Auto" />
			<Setter Property="ScrollViewer.CanContentScroll"  Value="true" />
			<Setter Property="VerticalContentAlignment" Value="Center" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListView">
						<Border 
							Name="Border"
							BorderThickness="1"
						>
							<Border.Background>
								<SolidColorBrush Color="{StaticResource ControlLightColor}" />
							</Border.Background>
							<Border.BorderBrush>
								<SolidColorBrush Color="{StaticResource BorderMediumColor}" />
							</Border.BorderBrush>
							<ScrollViewer Style="{DynamicResource {x:Static GridView.GridViewScrollViewerStyleKey}}">
								<ItemsPresenter />
							</ScrollViewer>
						</Border>
						<ControlTemplate.Triggers>
							<Trigger Property="IsGrouping" Value="true">
								<Setter Property="ScrollViewer.CanContentScroll" Value="false" />
							</Trigger>
							<Trigger Property="IsEnabled" Value="false">
								<Setter TargetName="Border" Property="Background">
									<Setter.Value>
										<SolidColorBrush Color="{DynamicResource DisabledBorderLightColor}" />
									</Setter.Value>
								</Setter>
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<Style TargetType="ListViewItem">
			<Setter Property="SnapsToDevicePixels" Value="True"/>
			<Setter Property="Margin" Value="0,1"/>
			<Setter Property="BorderBrush" Value="LightGray"/>
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="ListViewItem">
						<Border 
							x:Name="Bd"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							CornerRadius="2"
							SnapsToDevicePixels="True"
						>
							<ContentPresenter
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
								Content="{TemplateBinding Content}"
								ContentTemplate="{TemplateBinding ContentTemplate}"
							/>
						</Border>
						<ControlTemplate.Triggers>
							<!-- Выбранный элемент -->
							<Trigger Property="IsSelected" Value="True">
								<Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedGradient}"/>
							</Trigger>
							<!-- Hover -->
							<Trigger Property="IsMouseOver" Value="True">
								<Setter TargetName="Bd" Property="Background" Value="{StaticResource HoverGradient}"/>
							</Trigger>
							<!-- Выбранный + Hover -->
							<MultiTrigger>
								<MultiTrigger.Conditions>
									<Condition Property="IsSelected" Value="True"/>
									<Condition Property="IsMouseOver" Value="True"/>
								</MultiTrigger.Conditions>
								<Setter TargetName="Bd" Property="Background" Value="{StaticResource SelectedAndHoverGradient}"/>
							</MultiTrigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
	</Application.Resources>
</Application>
