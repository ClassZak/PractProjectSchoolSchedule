<Window x:Class="SchoolSchedule.View.MainWindow"
		xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
		xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
		xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
		xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
		xmlns:hc="https://handyorg.github.io/handycontrol"
		xmlns:local="clr-namespace:SchoolSchedule"
		xmlns:ViewModel="clr-namespace:SchoolSchedule.ViewModel"
		xmlns:Model="clr-namespace:SchoolSchedule.Model"
		xmlns:DTOModel="clr-namespace:SchoolSchedule.Model.DTO"
		mc:Ignorable="d"
		Icon="/Resources/scheduleicon.ico"
		Title="Школьное расписание" Height="400" Width="680"
		MinWidth="500"
		MinHeight="350" FontFamily="Arial"

		>
	<Window.Resources>
		<ControlTemplate x:Key="ValidationErrorTemplate">
			<DockPanel>
				<TextBlock Foreground="Red" 
                   Text="{Binding ErrorContent}"
                   DockPanel.Dock="Right"/>
				<AdornedElementPlaceholder/>
			</DockPanel>
		</ControlTemplate>

		<BooleanToVisibilityConverter x:Key="bool2VisibilityConverter" />
		<!--Style and template for the resize control on the DataGridColumnHeader.-->
		<Style x:Key="ColumnHeaderGripperStyle"
			TargetType="{x:Type Thumb}">
			<Setter Property="Width"
				Value="8" />
			<Setter Property="Background"
				Value="Transparent" />
			<Setter Property="Cursor"
				Value="SizeWE" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type Thumb}">
						<Border Background="{TemplateBinding Background}"
							Padding="{TemplateBinding Padding}" />
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>
		<!--Style and template for the DataGridColumnHeader.-->
		<Style TargetType="{x:Type DataGridColumnHeader}">
			<Setter Property="VerticalContentAlignment"
          Value="Center" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
						<Grid>
							<Border x:Name="columnHeaderBorder"
                  BorderThickness="1"
                  Padding="3,0,3,0">
								<Border.BorderBrush>
									<LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
										<GradientStop Color="{DynamicResource BorderLightColor}"
                              Offset="0" />
										<GradientStop Color="{DynamicResource BorderDarkColor}"
                              Offset="1" />
									</LinearGradientBrush>
								</Border.BorderBrush>
								<Border.Background>
									<LinearGradientBrush EndPoint="0.5,1"
                                   StartPoint="0.5,0">
										<GradientStop Color="{DynamicResource ControlLightColor}"
                              Offset="0" />
										<GradientStop Color="{DynamicResource ControlMediumColor}"
                              Offset="1" />
									</LinearGradientBrush>
								</Border.Background>
								<ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
							</Border>

							<Thumb x:Name="PART_LeftHeaderGripper"
                 HorizontalAlignment="Left"
                 Style="{StaticResource ColumnHeaderGripperStyle}" />
							<Thumb x:Name="PART_RightHeaderGripper"
                 HorizontalAlignment="Right"
                 Style="{StaticResource ColumnHeaderGripperStyle}" />
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush EndPoint="0.5,1"
                           StartPoint="0.5,0">
						<GradientStop Color="{DynamicResource ControlLightColor}"
                      Offset="0" />
						<GradientStop Color="{DynamicResource ControlMediumColor}"
                      Offset="1" />
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
		</Style>
		<!--Control colors.-->
		<Color x:Key="WindowColor">#FFE8EDF9</Color>
		<Color x:Key="ContentAreaColorLight">Black</Color>
		<Color x:Key="ContentAreaColorDark">Black</Color>

		<Color x:Key="DisabledControlLightColor">#FFE8EDF9</Color>
		<Color x:Key="DisabledControlDarkColor">#FFC5CBF9</Color>
		<Color x:Key="DisabledForegroundColor">#FF888888</Color>

		<Color x:Key="SelectedBackgroundColor">#FFC5CBF9</Color>
		<Color x:Key="SelectedUnfocusedColor">#FFDDDDDD</Color>

		<Color x:Key="ControlLightColor">White</Color>
		<Color x:Key="ControlMediumColor">AntiqueWhite</Color>
		<Color x:Key="ControlDarkColor">#FF211AA9</Color>

		<Color x:Key="ControlMouseOverColor">#FF3843C4</Color>
		<Color x:Key="ControlPressedColor">FloralWhite</Color>


		<Color x:Key="GlyphColor">#FF444444</Color>
		<Color x:Key="GlyphMouseOver">sc#1, 0.004391443, 0.002428215, 0.242281124</Color>

		<!--Border colors-->
		<Color x:Key="BorderLightColor">#FFCCCCCC</Color>
		<Color x:Key="BorderMediumColor">#FF888888</Color>
		<Color x:Key="BorderDarkColor">#FF444444</Color>

		<Color x:Key="PressedBorderLightColor">#FF888888</Color>
		<Color x:Key="PressedBorderDarkColor">#FF444444</Color>

		<Color x:Key="DisabledBorderLightColor">#FFAAAAAA</Color>
		<Color x:Key="DisabledBorderDarkColor">#FF888888</Color>

		<Color x:Key="DefaultBorderBrushDarkColor">Black</Color>

		<!--Control-specific resources.-->
		<Color x:Key="HeaderTopColor">#FFC5CBF9</Color>
		<Color x:Key="DatagridCurrentCellBorderColor">Black</Color>
		<Color x:Key="SliderTrackDarkColor">#FFC5CBF9</Color>

		<Color x:Key="NavButtonFrameColor">#FF3843C4</Color>

		<LinearGradientBrush x:Key="MenuPopupBrush"
                     EndPoint="0.5,1"
                     StartPoint="0.5,0">
			<GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="0" />
			<GradientStop Color="{DynamicResource ControlMediumColor}"
                Offset="0.5" />
			<GradientStop Color="{DynamicResource ControlLightColor}"
                Offset="1" />
		</LinearGradientBrush>

		<LinearGradientBrush x:Key="ProgressBarIndicatorAnimatedFill"
                     StartPoint="0,0"
                     EndPoint="1,0">
			<LinearGradientBrush.GradientStops>
				<GradientStopCollection>
					<GradientStop Color="#000000FF"
                    Offset="0" />
					<GradientStop Color="#600000FF"
                    Offset="0.4" />
					<GradientStop Color="#600000FF"
                    Offset="0.6" />
					<GradientStop Color="#000000FF"
                    Offset="1" />
				</GradientStopCollection>
			</LinearGradientBrush.GradientStops>
		</LinearGradientBrush>






		<!--~TabControl-->
		<Style  TargetType="{x:Type TabControl}">
			<Setter Property="OverridesDefaultStyle"
          Value="True" />
			<Setter Property="SnapsToDevicePixels"
          Value="True" />
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabControl}">
						<Grid KeyboardNavigation.TabNavigation="Local">
							<Grid.RowDefinitions>
								<RowDefinition Height="Auto" />
								<RowDefinition Height="*" />
							</Grid.RowDefinitions>
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                    (SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0"
                                         Value="#FFAAAAAA" />
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<TabPanel x:Name="HeaderPanel"
                    Grid.Row="0"
                    Panel.ZIndex="1"
                    Margin="0,0,4,-1"
                    IsItemsHost="True"
                    KeyboardNavigation.TabIndex="1"
                    Background="Transparent" />
							<Border x:Name="Border"
                  Grid.Row="1"
                  BorderThickness="1"
                  KeyboardNavigation.TabNavigation="Local"
                  KeyboardNavigation.DirectionalNavigation="Contained"
                  KeyboardNavigation.TabIndex="2" >
								<Border.BorderBrush>
									<SolidColorBrush Color="{StaticResource BorderDarkColor}"/>
								</Border.BorderBrush>
								<ContentPresenter x:Name="PART_SelectedContentHost"
                              Margin="4"
                              ContentSource="SelectedContent" />
							</Border>
						</Grid>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>

		<Style TargetType="{x:Type TabItem}">
			<Setter Property="Template">
				<Setter.Value>
					<ControlTemplate TargetType="{x:Type TabItem}">
						<Grid x:Name="Root">
							<VisualStateManager.VisualStateGroups>
								<VisualStateGroup x:Name="SelectionStates">
									<VisualState x:Name="Unselected" />
									<VisualState x:Name="Selected">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
												<EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource ControlPressedColor}" />
											</ColorAnimationUsingKeyFrames>
											<ThicknessAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderThickness)"
                                                    Storyboard.TargetName="Border">
												<EasingThicknessKeyFrame KeyTime="0"
                                             Value="1,1,1,0" />
											</ThicknessAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
								<VisualStateGroup x:Name="CommonStates">
									<VisualState x:Name="Normal" />
									<VisualState x:Name="MouseOver" />
									<VisualState x:Name="Disabled">
										<Storyboard>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Panel.Background).
                    (GradientBrush.GradientStops)[1].(GradientStop.Color)">
												<EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledControlDarkColor}" />
											</ColorAnimationUsingKeyFrames>
											<ColorAnimationUsingKeyFrames Storyboard.TargetName="Border"
                                                Storyboard.TargetProperty="(Border.BorderBrush).
                    (SolidColorBrush.Color)">
												<EasingColorKeyFrame KeyTime="0"
                                         Value="{StaticResource DisabledBorderLightColor}"/>
											</ColorAnimationUsingKeyFrames>
										</Storyboard>
									</VisualState>
								</VisualStateGroup>
							</VisualStateManager.VisualStateGroups>
							<Border x:Name="Border"
                  Margin="0,0,-4,0"
                  BorderThickness="1,1,1,1"
                  CornerRadius="2,12,0,0">
								<Border.BorderBrush>
									<SolidColorBrush Color="{DynamicResource BorderMediumColor}" />
								</Border.BorderBrush>
								<Border.Background>

									<LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
										<LinearGradientBrush.GradientStops>
											<GradientStopCollection>
												<GradientStop Color="{DynamicResource ControlLightColor}"
                                  Offset="0.0" />
												<GradientStop Color="{DynamicResource ControlMediumColor}"
                                  Offset="1.0" />
											</GradientStopCollection>
										</LinearGradientBrush.GradientStops>
									</LinearGradientBrush>

								</Border.Background>
								<ContentPresenter x:Name="ContentSite"
                              VerticalAlignment="Center"
                              HorizontalAlignment="Center"
                              ContentSource="Header"
                              Margin="12,2,12,2"
                              RecognizesAccessKey="True" />
							</Border>
						</Grid>
						<ControlTemplate.Triggers>
							<Trigger Property="IsSelected"
                   Value="True">
								<Setter Property="Panel.ZIndex"
                    Value="100" />
							</Trigger>
						</ControlTemplate.Triggers>
					</ControlTemplate>
				</Setter.Value>
			</Setter>
		</Style>


		<!--Кнопки-->
		<Style TargetType="Button">
			<Setter Property="Background">
				<Setter.Value>
					<LinearGradientBrush StartPoint="0,0"
                                   EndPoint="0,1">
						<GradientStop Color="{StaticResource ControlLightColor}" Offset="0.997"/>
						<GradientStop Color="{StaticResource ControlMediumColor}" Offset="0"/>
					</LinearGradientBrush>
				</Setter.Value>
			</Setter>
		</Style>
	</Window.Resources>
	<Grid Background="AntiqueWhite">
		<Grid.DataContext>
			<ViewModel:MainViewModel/>
		</Grid.DataContext>
		<Grid.RowDefinitions>
			<RowDefinition Height="20"/>
			<RowDefinition/>
		</Grid.RowDefinitions>
		<Menu Grid.RowSpan="1">
			<MenuItem Header="Файл">
				<MenuItem Header="Загрузить">
					<MenuItem Header="Загрузить таблицу &quot;Ученики&quot; из сервера"			Command="{Binding UpdateDataAsync}" CommandParameter="{x:Type Model:Student}"		/>
					<MenuItem Header="Загрузить таблицу &quot;Учителя&quot; из сервера"			Command="{Binding UpdateDataAsync}" CommandParameter="{x:Type Model:Teacher}"		/>
					<MenuItem Header="Загрузить таблицу &quot;Номера учителей&quot; из сервера"	Command="{Binding UpdateDataAsync}" CommandParameter="{x:Type Model:TeacherPhone}"	/>
					<MenuItem Header="Загрузить таблицу &quot;Предметы&quot; из сервера"		Command="{Binding UpdateDataAsync}" CommandParameter="{x:Type Model:Subject}"		/>
					<MenuItem Header="Загрузить таблицу &quot;Классы&quot; из сервера"			Command="{Binding UpdateDataAsync}" CommandParameter="{x:Type Model:Group}"			/>
					<MenuItem Header="Загрузить таблицу &quot;Уроки&quot; из сервера"			Command="{Binding UpdateDataAsync}" CommandParameter="{x:Type Model:Lesson}"		/>
					<MenuItem Header="Загрузить таблицу &quot;Расписание&quot; из сервера"		Command="{Binding UpdateDataAsync}" CommandParameter="{x:Type Model:Schedule}"		/>
					<Separator/>
					<MenuItem Header="Загрузить все таблицы из сервера"							Command="{Binding UpdateDataAsync}"/>
					<Separator/>
					<MenuItem Header="Переподключиться к серверу"								Command="{Binding Reconnect}"/>
				</MenuItem>
			</MenuItem>
		</Menu>
		<Grid Margin="6" Grid.Row="1">
			<Grid.RowDefinitions>
				<RowDefinition/>
				<RowDefinition Height="30"/>
			</Grid.RowDefinitions>
			<TabControl>
				<TabItem Header="Классы">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="30"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="80"/>
						</Grid.ColumnDefinitions>
						<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding DTOGroup}">
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem
									Header="Удалить"
									Command="{Binding DeleteCommand}"
									CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
								/>
								</ContextMenu>
							</DataGrid.ContextMenu>
							<DataGrid.Columns>
								<DataGridTextColumn Header="Год" Binding="{Binding Year}"/>
								<DataGridTextColumn Header="Группа" Binding="{Binding Name}"/>
							</DataGrid.Columns>
							<DataGrid.RowStyle>
								<Style TargetType="DataGridRow">
									<Setter Property="Validation.ErrorTemplate" Value="{x:Null}"/>
								</Style>
							</DataGrid.RowStyle>
						</DataGrid>
						<Grid Grid.Column="1" Grid.RowSpan="2" Margin="5">
							<StackPanel>
								<Button Margin="0,5,0,0" Content="Добавить"  Command="{Binding Insert}" CommandParameter="{x:Type Model:Group}"/>
								<Button Margin="0,5,0,0" Content="Изменить"/>
								<Button Margin="0,5,0,0" Content="Удалить"/>
							</StackPanel>
						</Grid>
						<Button 
						Grid.Row="1" 
						Margin="5" 
						Content="Загрузить таблицу &quot;Классы&quot; из сервера"
						Command="{Binding UpdateDataAsync}"
						CommandParameter="{x:Type Model:Group}"
					/>
					</Grid>
				</TabItem>
				<TabItem Header="Ученики">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="30"/>
						</Grid.RowDefinitions>
						<Grid.ColumnDefinitions>
							<ColumnDefinition/>
							<ColumnDefinition Width="80"/>
						</Grid.ColumnDefinitions>
						<DataGrid
							AutoGenerateColumns="False"
							ItemsSource="{Binding DTOStudents}"
							IsReadOnly="True"
							>
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem
										Header="Удалить"
										Command="{Binding DeleteCommand}"
										CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									/>
								</ContextMenu>
							</DataGrid.ContextMenu>
							<DataGrid.Columns>
								<DataGridTextColumn Header="Фамилия" Binding="{Binding Surname}"/>
								<DataGridTextColumn Header="Имя" Binding="{Binding Name}"/>
								<DataGridTextColumn Header="Отчество" Binding="{Binding Patronymic}"/>
								<DataGridTextColumn Header="Класс" Binding="{Binding GroupLabel}"/>
								<DataGridTextColumn Header="Электронная почта" Binding="{Binding Email}"/>
							</DataGrid.Columns>
						</DataGrid>
						<Grid Grid.Column="1" Grid.RowSpan="2" Margin="5">
							<StackPanel>
								<Button Margin="0,5,0,0" Content="Добавить"/>
								<Button Margin="0,5,0,0" Content="Изменить"/>
								<Button Margin="0,5,0,0" Content="Удалить"/>
							</StackPanel>
						</Grid>
						<Button
							Grid.Row="1"
							Margin="5"
							Content="Загрузить таблицу &quot;Ученики&quot; из сервера"
							Command="{Binding UpdateDataAsync}"
							CommandParameter="{x:Type Model:Student}"
						/>
					</Grid>
				</TabItem>

				<TabItem Header="Учителя">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="30"/>
						</Grid.RowDefinitions>
						<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Teachers}">
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem
										Header="Удалить"
										Command="{Binding DeleteCommand}"
										CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									/>
								</ContextMenu>
							</DataGrid.ContextMenu>
							<DataGrid.Columns>
								<DataGridTextColumn Header="Фамилия" Binding="{Binding Surname}"/>
								<DataGridTextColumn Header="Имя" Binding="{Binding Name}"/>
								<DataGridTextColumn Header="Отчество" Binding="{Binding Patronymic}"/>
								<DataGridTextColumn Header="Предмет(ы)" Binding="{Binding SubjectLabel}"/>
							</DataGrid.Columns>
						</DataGrid>
						<Button
							Grid.Row="1"
							Margin="5"
							Content="Загрузить таблицу &quot;Учителя&quot; из сервера"
							Command="{Binding UpdateDataAsync}"
							CommandParameter="{x:Type Model:Teacher}"
						/>
					</Grid>
				</TabItem>
				<TabItem Header="Номера учителей">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="30"/>
						</Grid.RowDefinitions>
						<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding TeacherPhones}">
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem
										Header="Удалить"
										Command="{Binding DeleteCommand}"
										CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									/>
								</ContextMenu>
							</DataGrid.ContextMenu>
							<DataGrid.Columns>
								<DataGridTextColumn Header="Учитель" Binding="{Binding TeacherLabel}"/>
								<DataGridTextColumn Header="Телефон" Binding="{Binding PhoneNumber}"/>
							</DataGrid.Columns>
						</DataGrid>
						<Button
							Grid.Row="1"
							Margin="5"
							Content="Загрузить таблицу &quot;Номера учителей&quot; из сервера"
							Command="{Binding UpdateDataAsync}"
							CommandParameter="{x:Type Model:TeacherPhone}"
						/>
					</Grid>
				</TabItem>
				<TabItem Header="Предметы">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="17*"/>
							<ColumnDefinition Width="312*"/>
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="30"/>
						</Grid.RowDefinitions>
						<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Subjects}" Grid.ColumnSpan="2">
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem
										Header="Удалить"
										Command="{Binding DeleteCommand}"
										CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									/>
								</ContextMenu>
							</DataGrid.ContextMenu>
							<DataGrid.Columns>
								<DataGridTextColumn Header="Название" Binding="{Binding Name}"/>
							</DataGrid.Columns>
						</DataGrid>
						<Grid Grid.ColumnSpan="2" Margin="0,263,0,0" Grid.RowSpan="2">
							<Grid.ColumnDefinitions>
								<ColumnDefinition/>
								<ColumnDefinition/>
							</Grid.ColumnDefinitions>
							<Button
								Margin="5"
								Content="Загрузить таблицу &quot;Предметы&quot; из сервера"
								Command="{Binding UpdateDataAsync}"
								CommandParameter="{x:Type Model:Subject}"
							/>
							<Button
								Grid.Column="1"
								Margin="5"
								Content="Сохранить изменения на сервере"
								Command="{Binding UpdateDataAsync}"
								CommandParameter="{x:Type Model:Subject}"
							/>
						</Grid>
					</Grid>
				</TabItem>
				<TabItem Header="Уроки">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="30"/>
						</Grid.RowDefinitions>
						<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Lessons}">
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem
										Header="Удалить"
										Command="{Binding DeleteCommand}"
										CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									/>
								</ContextMenu>
							</DataGrid.ContextMenu>
							<DataGrid.Columns>
								<DataGridTextColumn Header="Класс" Binding="{Binding GroupLabel}"/>
								<DataGridTextColumn Header="Предмет" Binding="{Binding SubjectLabel}"/>
								<DataGridTextColumn Header="Номер урока" Binding="{Binding Number}"/>
							</DataGrid.Columns>
						</DataGrid>
						<Button
							Grid.Row="1"
							Margin="5"
							Content="Загрузить таблицу &quot;Уроки&quot; из сервера"
							Command="{Binding UpdateDataAsync}"
							CommandParameter="{x:Type Model:Lesson}"
						/>
					</Grid>
				</TabItem>
				<TabItem Header="Расписание">
					<Grid>
						<Grid.RowDefinitions>
							<RowDefinition/>
							<RowDefinition Height="30"/>
						</Grid.RowDefinitions>
						<DataGrid AutoGenerateColumns="False" ItemsSource="{Binding Schedules}">
							<DataGrid.ContextMenu>
								<ContextMenu>
									<MenuItem
										Header="Удалить"
										Command="{Binding DeleteCommand}"
										CommandParameter="{Binding Path=PlacementTarget, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
									/>
								</ContextMenu>
							</DataGrid.ContextMenu>
							<DataGrid.Columns>
								<DataGridTextColumn Header="Предмет" Binding="{Binding Subject}"/>
								<DataGridTextColumn Header="Класс" Binding="{Binding Group}"/>
								<DataGridTextColumn Header="Номер урока" Binding="{Binding Number}"/>
								<DataGridTextColumn Header="Фамилия учителя" Binding="{Binding Surname}"/>
								<DataGridTextColumn Header="Имя учителя" Binding="{Binding Name}"/>
								<DataGridTextColumn Header="Отчество учителя" Binding="{Binding Patronymic}"/>
								<DataGridTextColumn Header="Время начала" Binding="{Binding StartTime}"/>
								<DataGridTextColumn Header="Время завершения" Binding="{Binding EndTime}"/>
								<DataGridTextColumn Header="Дата проведения" Binding="{Binding Date}"/>
							</DataGrid.Columns>
						</DataGrid>
						<Button 
							Grid.Row="1"
							Margin="5"
							Content="Загрузить таблицу &quot;Расписание&quot; из сервера"
							Command="{Binding UpdateDataAsync}"
							CommandParameter="{x:Type Model:Schedule}"
						/>
					</Grid>
				</TabItem>
			</TabControl>


			<Grid Grid.Row="1" Margin="0,5,0,5">
				<Grid>
					<Button 
						Content="Загрузить все данные"
						Command="{Binding UpdateDataAsync}"
						CommandParameter="{x:Null}"
					/>
				</Grid>
			</Grid>
		</Grid>
	</Grid>
</Window>
